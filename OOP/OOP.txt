*****************************************************************************
При разработке приложений используются такие принципы ООП как: 

1) Инкапсуляция - используется на этапе когда нам следует 
исключить внешнее влияние на программный код , а так же неверное 
использование заложенных в нем данных.
Допустим нам нужно обеспечить доступ только из текущего класса
тогда мы будет применять модификатор доступа "privet",это позволит
нам скрыть все наши данные для внешнего мира.
Если же нам нужно обеспечить доступ только для классов в одном 
пакете и подклассах то тогда будет использовать "protected"
Если мы хотим обеспечить доступ в глобальном маштабе то будем 
применять "public"

2)Наследование - Используется на этапе когда нас почти устраивает 
какой-то уже существующий класс, мы создаем потомка и 
переорпределяем какие то части его методов 
Например:
Создаем мы тамагочи, у нас есть некий класс "Животные" в котором уже
есть какие нибудь методы на подобии "Кушать" ,"Спать". От этого класса
наследуется класс "Собака" и добавляется метод "Играть", а таже наследуется
класс "Рыбка" в который добавлется метод "Загрязнение аквариума".Благодаря
такому механизму как наследование нам не пришлось переписывать один и тот же
код по нескольку раз.

3) Полиморфизм - Используется на этапе когда нужно указать какую версию
метода надо запустить
Например:
у нас есть несколько наследуемых классов, с разной реализацией
одного и того же метода. То есть, у нас есть несколько разных методов с 
одинаковым именем реализованных в разных классах. Какую версию метода вызвать?
Это зависит от типа переменной, в которой находится объект.